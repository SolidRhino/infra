---
- name: Configure RPi Server
  hosts: server
  become: true
  vars:
    ghostty_terminfo: "{{ lookup('pipe', 'infocmp -x ghostty') }}"

  tasks:
    # System packages
    - name: Install plocate package
      ansible.builtin.apt:
        name: plocate
        state: present

    # Fish shell installation and configuration
    - name: Add fish shell repository
      ansible.builtin.apt_repository:
        repo: ppa:fish-shell/release-3
        state: present

    - name: Install fish shell
      ansible.builtin.apt:
        name: fish
        state: present
        update_cache: true

    - name: Change default shell to fish for user ivo
      ansible.builtin.user:
        name: ivo
        shell: /usr/bin/fish

    # Starship prompt installation
    - name: Download and install Starship
      ansible.builtin.get_url:
        url: https://starship.rs/install.sh
        dest: /tmp/starship-install.sh
        mode: "0755"
      register: download_script

    - name: Install Starship
      ansible.builtin.shell: /tmp/starship-install.sh --yes
      args:
        executable: /bin/bash
        creates: /usr/local/bin/starship

    - name: Create fish config directory
      become: false
      ansible.builtin.file:
        path: "/home/{{ ansible_user }}/.config/fish"
        state: directory
        mode: "0755"

    - name: Configure fish shell
      become: false
      ansible.builtin.blockinfile:
        path: "/home/{{ ansible_user }}/.config/fish/config.fish"
        create: true
        mode: "0644"
        block: |
          # Disable welcome message
          set -g fish_greeting ""

          # Initialize starship prompt
          starship init fish | source

    # User configuration
    - name: Create .hushlogin file to suppress last login message
      become: false
      ansible.builtin.file:
        path: "/home/{{ ansible_user }}/.hushlogin"
        state: touch
        mode: "0644"

    # Terminal configuration
    - name: Setup Ghostty terminal
      block:
        - name: Create temporary ghostty terminfo file
          ansible.builtin.copy:
            content: "{{ ghostty_terminfo }}"
            dest: "/tmp/ghostty.terminfo"
            mode: "0644"

        - name: Install Ghostty terminfo entries
          ansible.builtin.command: tic -x /tmp/ghostty.terminfo
          register: tic_result
          changed_when: tic_result.rc == 0
          failed_when: tic_result.rc != 0

        - name: Clean up temporary file
          ansible.builtin.file:
            path: "/tmp/ghostty.terminfo"
            state: absent

  # External roles
  roles:
    - ansible-role-docker
    - ansible-role-figurine
    - ansible-role-argononed
