---
# Development tools installation and configuration
- name: Install Development Tools
  block:
    # Rust Installation
    - name: Download rustup installer
      become: false
      ansible.builtin.get_url:
        url: https://sh.rustup.rs
        dest: /tmp/rustup.sh
        mode: "0755"

    - name: Install Rust and Cargo with stable toolchain
      become: false
      ansible.builtin.shell: |
        ./rustup.sh -y
        source "$HOME/.cargo/env"
        rustup default stable
      args:
        chdir: /tmp
        creates: "/home/{{ ansible_user }}/.cargo/bin/rustc"
      environment:
        PATH: "/home/{{ ansible_user }}/.cargo/bin:{{ ansible_env.PATH }}"
      register: rust_install

    - name: Show Rust installation output
      ansible.builtin.debug:
        msg: "{{ rust_install.stdout_lines }}"
      when: rust_install.stdout is defined

    - name: Clean up rustup installer
      ansible.builtin.file:
        path: /tmp/rustup.sh
        state: absent

    # Cargo installations
    - name: Install cargo packages
      become: false
      ansible.builtin.shell: |
        source "$HOME/.cargo/env"
        echo "Installing {{ item }}..."
        cargo install {{ item }} --verbose
      args:
        executable: /bin/bash
        creates: "/home/{{ ansible_user }}/.cargo/bin/{{ item }}"
      environment:
        PATH: "/home/{{ ansible_user }}/.cargo/bin:{{ ansible_env.PATH }}"
        CARGO_TERM_PROGRESS_WHEN: "always"
        CARGO_TERM_PROGRESS_WIDTH: "80"
      register: cargo_install
      loop:
        - eza
        - bat
        - zoxide
        - cargo-update
        - cargo-cache
        - bottom
      loop_control:
        label: "Installing {{ item }}"

    - name: Show cargo installation results
      ansible.builtin.debug:
        msg: "{{ item.stdout_lines }}"
      loop: "{{ cargo_install.results }}"
      when: item.stdout is defined
      loop_control:
        label: "{{ item.item }} installation output"

    - name: Clean cargo cache
      become: false
      ansible.builtin.shell: |
        source "$HOME/.cargo/env"
        cargo cache --autoclean
      args:
        executable: /bin/bash
      environment:
        PATH: "/home/{{ ansible_user }}/.cargo/bin:{{ ansible_env.PATH }}"
      register: cache_clean
      changed_when: "'removing' in cache_clean.stdout or 'removing' in cache_clean.stderr"

    - name: Show cache cleaning results
      ansible.builtin.debug:
        msg: "{{ cache_clean.stdout_lines }}"
      when: cache_clean.stdout is defined

# Tool Configurations
- name: Configure Development Tools
  block:
    # Bat Configuration
    - name: Create bat config directory
      become: false
      ansible.builtin.file:
        path: "/home/{{ ansible_user }}/.config/bat"
        state: directory
        mode: "0755"

    - name: Configure bat
      become: false
      ansible.builtin.copy:
        dest: "/home/{{ ansible_user }}/.config/bat/config"
        mode: "0644"
        content: |
          # Set the theme to "TwoDark"
          --theme="TwoDark"

          # Show line numbers, Git modifications and file header (but no grid)
          --style="numbers,changes,header"

          # Use italic text on the terminal (not supported on all terminals)
          --italic-text=always

    # Bottom Configuration
    - name: Configure bottom
      become: false
      block:
        - name: Create bottom config directory
          ansible.builtin.file:
            path: "/home/{{ ansible_user }}/.config/bottom"
            state: directory
            mode: "0755"

        - name: Configure bottom
          ansible.builtin.copy:
            dest: "/home/{{ ansible_user }}/.config/bottom/bottom.toml"
            mode: "0644"
            content: |
              # This is a default config file for bottom.

              [flags]
              # Whether to hide the average cpu entry.
              hide_avg_cpu = false
              # Whether to use dot markers rather than braille.
              dot_marker = true
              # The update rate of the application.
              rate = 1000
              # Whether to put the CPU legend to the left.
              left_legend = false
              # Whether to set CPU% on a process to be based on the total CPU or just current usage.
              current_usage = true
              # Whether to group processes with the same name together by default.
              group_processes = true
              # Whether to make process searching case sensitive by default.
              case_sensitive = false
              # Whether to make process searching look for matching the entire word by default.
              whole_word = false
              # Whether to make process searching use regex by default.
              regex = true
              # Defaults to Celsius.  Temperature is one of:
              #  - "k" (Kelvin)
              #  - "f" (Fahrenheit)
              #  - "c" (Celsius)
              temperature_type = "c"
              # The default time interval (in milliseconds).
              default_time_value = 60000
              # The time delta on each zoom in/out action (in milliseconds).
              time_delta = 15000
              # Show memory values in the processes widget as values by default
              mem_as_value = true
              # Use basic mode by default in the processes widget.
              basic = false

              [colors]
              # Enable custom colors
              enable_status_color = true
              # Semicolon separated array of colors for showing high to low values.
              gradient = ["#FF0000", "#FFB86C", "#50FA7B"]
              # Main bg/fg colors
              table_header_color = "#FF79C6"
              widget_title_color = "#BD93F9"
              selected_text_color = "#282A36"
              selected_bg_color = "#BD93F9"
              graph_color = "#BD93F9"
